{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","goods","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAMC,EAAK,UAAOF,GAElB,EAAkCG,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASJ,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAwBA,OAjBAR,EAAMS,MAAK,SAACC,EAAOC,GACjB,OAAQJ,GACN,KAAKV,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITX,GACFJ,EAAMgB,UAIN,qBAAKC,UAAU,MAAf,SACGf,EAEG,qCACE,wBACEgB,KAAK,SACLC,QAAS,kBAAMX,EAAYX,EAASe,WAFtC,iCAOA,wBACEM,KAAK,SACLC,QAAS,kBAAMX,EAAYX,EAASiB,SAFtC,4BAOA,wBACEI,KAAK,SACLC,QAAS,kBAAMd,GAAeD,IAFhC,qBAOA,wBAAQc,KAAK,SAASC,QAhDlB,WACZd,GAAc,GACdG,EAAYX,EAASS,OA8Cb,mBAIA,oBAAIW,UAAU,QAAd,SACGjB,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SACGI,GAD8BA,WAQvC,wBACEH,KAAK,SACLC,QAAS,kBAAMhB,GAAcD,IAF/B,sBCzFVoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.64382c45.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const goods = [...goodsFromServer];\n\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  goods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPHABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button type=\"button\" onClick={reset}>\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => setIsStarted(!isStarted)}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}